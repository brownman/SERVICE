gksu echo hi
( assert network_alive ) && { print ok '[wifi] already connected';exiting; } || ( print_color 33 '[wifi] connecting..' )
#source network_vars.1st #load variables: name of wifi-device, ssid to connect to.. 
#source network.cfg
#sudo killall dhcpcd
sudo ifconfig $device down #activate the device
sudo ifconfig $device up #activate the device
sleep 4
DECIDE/ssid_info.sh #ensure ssid is available
sudo iwconfig | grep 'Access Point'

GENERATOR/generate_wpa_profile.sh #use wpa2 params to generate psk
SOLUTION/connect_to_wpa.sh #finally - dhcp: request for ip
#sleep 3
#assert network_alive


#sudo ifconfig $device down
#export psk1="$( DECIDE/psk.sh )";export ssid1=$ssid;export mac_ssid1=$mac_ssid;
GENERATOR/wpa.sh
update_clipboard sudo wpa_supplicant -i$device -D$driver -c/tmp/wpa -d

echo 'sudo wpa_supplicant -i$device -D$driver -c/tmp/wpa -B'
echo 'sudo dhcpcd $device'
echo 'sudo dhclient $device'


#sudo ifconfig $device 
#sudo iwconfig $device #check that device is recognized
#sudo ip link
export file_wpa=/tmp/wpa
sudo ip link set $device up
#sudo wpa_passphrase $ssid $key > $file_wpa 

